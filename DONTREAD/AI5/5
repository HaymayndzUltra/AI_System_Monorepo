Filename: docs/proposals/06-testing-qa-trigger-framework.md
### Title
Testing & QA Trigger Framework

### Goals
- Normalize test routing across stacks: unit, integration, e2e, coverage enforcement.
- Provide explicit QA planning and test data hooks.

### Assumptions
- Projects have diverse testing stacks; router must be adapter-based.

### New Testing Capabilities
- test.unit, test.integration, test.e2e, test.generate, coverage.enforce, qa.plan

### Backward-Compat
- "testing, qa, coverage" map to test.* + coverage.enforce + qa.plan

### Trigger ↔ Rule(s) ↔ Files/Outputs
| Capability | Rule(s) | Outputs |
|---|---|---|
| test.unit | testing rules (future) | junit.xml, snapshots |
| test.integration | testing rules (future) | junit.xml, logs |
| test.e2e | testing rules (future) | artifacts/screenshots |
| coverage.enforce | code.quality + CI policy | coverage reports, gates |
| qa.plan | dev-workflow plan | qa/TEST-PLAN.md |

### Risks
- Flaky e2e; enforce retry budgets and quarantine.

### Dependencies
- Adapter layer per framework (Jest, Vitest, PyTest, Go test, Cypress/Playwright).

### Success Metrics
- ≥80% coverage enforced where configured.
- Flaky test rate <2% weekly.

### Next Steps
- Define adapter interface.
- Seed baseline adapters and examples.
