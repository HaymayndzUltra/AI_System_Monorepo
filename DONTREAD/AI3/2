### Strategy A: Lean Monolith (React SPA + Node/Express + Postgres)

- Goal(s): Fastest path to value with minimal infra complexity.

### Assumptions
- Single repo; single runtime; moderate scale (<100 RPS avg).

### Alternatives
- Modular monorepo (Strategy B), Serverless-first (Strategy C). Chosen for speed and simplicity.

### Risks & Mitigations
- Scale ceiling (M×M): Vertical scaling, read replicas, queue offloading later.
- Team coupling (M×M): Clear module boundaries; codeowners.
- Single point failure (L×H): HA deploy + backups + health checks.

### Dependencies
- Container runtime, managed Postgres, CDN, CI.

### Architecture Summary
- React SPA, Node/Express app, Prisma/TypeORM, Postgres, Redis optional.

### Trigger → Rule → File(s)/Output mapping

| Trigger | Rules | Files/Outputs | Gates |
|---|---|---|---|
| architecture | `F4-architecture`, `4-code-modification-safety` | `docs/proposals/domain-architecture.md` | ADR review |
| implement | `F6-implementation`, `3-code-quality-checklist` | CI config, app scaffold | Tests, lint, SAST |
| security | `F8-security`, `F8-security-and-compliance-overlay` | `docs/proposals/security-plan.md` | SAST/DAST/SBOM |
| observability | `F10-observability` | `docs/proposals/observability-plan.md` | SLI/SLO gates |

### Success Metrics
- Time-to-first-prod ≤ 2 weeks; p95 latency ≤ 250ms; AA compliance.

### Next Steps
- Approve `decision-matrix.md` results; greenlight milestone plan.