### Strategy C: Serverless-first (Next.js SSG/ISR + Functions + DynamoDB + S3)

- Goal(s): Minimize ops, scale elastically, pay-per-use.

### Assumptions
- Cloud-native platform; managed services preferred.

### Alternatives
- A, B as above. Chosen for ops-light workloads and burst traffic.

### Risks & Mitigations
- Cold starts (M×M): Provisioned concurrency; regional placement.
- Data modeling limits (M×M): Single-table design reviews; tooling.
- Vendor lock-in (M×M): Portability layer; ADR acknowledgement.

### Dependencies
- Cloud IAM, serverless framework, observability stack.

### Architecture Summary
- Next.js SSG/ISR, Lambda/CF/Functions, DynamoDB, S3, API gateway.

### Trigger → Rule → File(s)/Output mapping

| Trigger | Rules | Files/Outputs | Gates |
|---|---|---|---|
| architecture | `F4-architecture`, `F9-release` | `domain-architecture.md` | IaC review |
| security | `F8-security` | `security-plan.md` | Least-privilege IAM |
| observability | `F10-observability` | `observability-plan.md` | Tail latency SLO |

### Success Metrics
- 99.9% uptime with no dedicated ops headcount; p95 < 300ms.

### Next Steps
- Prototype latency-critical endpoint; measure cold start impact.